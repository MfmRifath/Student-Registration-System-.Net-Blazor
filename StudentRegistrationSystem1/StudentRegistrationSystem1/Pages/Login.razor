@page "/"
@using StudentRegistrationSystem1.Models;
@using StudentRegistrationSystem1.Services;
@using System.ComponentModel.DataAnnotations
@inject NavigationManager Navigation



<div class="login-container">
    <h1>Student Registration System</h1>
    <div class="logo">
        <img src="/Images/logo.png" alt="Logo" />
    </div>
<h3>Login</h3>
<form class="login-form">
<EditForm Model="@loginModel" OnValidSubmit="OnLogin">
    <DataAnnotationsValidator />

    <div class="form-group">
        <labelclass class="form-label" for="Username">Username:</labelclass>
        <InputText id="Username" @bind-Value="loginModel.Username" class="form-control" />
        <ValidationMessage For="@(() => loginModel.Username)" />
    </div>

    <divclass class="form-group">
            <label class="form-label" for="Password">Password:</label>
        <InputText id="Password" @bind-Value="loginModel.Password" class="form-control" type="password" />
        <ValidationMessage For="@(() => loginModel.Password)" />
    </divclass>

    <div>
        <button type="submit" class="mt-2 btn btn-primary">Login</button>
    </div>
</EditForm>
    <div>
    @if (!string.IsNullOrEmpty(errorMessage))
    {
    <p style="color: red;">@errorMessage</p>
     }
    </div>
<divclass class="register-link">
    <p>If you don't have an account? <a href="/register">Create one</a>.</p>
</divclass>

</form>
</div>

@code {
    private LoginModel loginModel = new LoginModel();
    private DatabaseHelper databaseHelper;
    private string errorMessage;

    private class LoginModel
    {
        [Required(ErrorMessage = "Username is required.")]
        public string Username { get; set; }

        [Required(ErrorMessage = "Password is required.")]
        public string Password { get; set; }
    }

    private void OnLogin()
    {
        try
        {
            // Assuming the database path is set appropriately
            databaseHelper = new DatabaseHelper();
            var userValidated = databaseHelper.ValidateUser(loginModel.Username, loginModel.Password);

            if (userValidated)
            {
                // Successful login
                // Navigate to the next page or perform any other action
                Navigation.NavigateTo("/Home");
                Console.WriteLine("Login successful");
            }
            else
            {
                // Failed login
                // Display an error message or take appropriate action
                errorMessage = "Invalid username or password. Please try again.";
                Console.WriteLine("Login failed");
            }
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred during login. Please try again.";
            Console.WriteLine($"Error during login: {ex.Message}");
        }
        finally
        {
            // Dispose of the database helper to release resources
            databaseHelper?.Dispose();
        }
    }
    
}